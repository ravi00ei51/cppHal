#ifndef __H_INTERRUPT_H__
#define __H_INTERRUPT_H__

#include "funcTuple.h"
#define STM32F103RB   (0u)
#define RESERVED_INTERRUPT_VECTOR    (reinterpret_cast<fptr>(0xFFFFFFFFu))

template <> class iEnum<STM32F103RB>
{
public:
    enum val:unsigned int
    {
        INT_VECTOR_STACK_ADDRESS,
        INT_VECTOR_RESET,
        INT_VECTOR_NMI,
        INT_VECTOR_HARD_FAULT,
        INT_VECTOR_MEM_MANAGE,
        INT_VECTOR_BUS_FAULT,
        INT_VECTOR_USG_FAULT,
        INT_VECTOR_RESERVED_0,
        INT_VECTOR_RESERVED_1,
        INT_VECTOR_RESERVED_2,
        INT_VECTOR_RESERVED_3,
        INT_VECTOR_SVC_CALL,
        INT_VECTOR_DEBUG_MONITOR,
        INT_VECTOR_RESERVED_4,
        INT_VECTOR_PEND_SV,
        INT_VECTOR_SYSTICK_TIMER,
        INT_VECTOR_WWDG,
        INT_VECTOR_PVD,
        INT_VECTOR_TAMPER,
        INT_VECTOR_RTC,
        INT_VECTOR_FLASH,
        INT_VECTOR_RCC,
        INT_VECTOR_EXTI0,
        INT_VECTOR_EXTI1,
        INT_VECTOR_EXTI2,
        INT_VECTOR_EXTI3,
        INT_VECTOR_EXTI4,
        INT_VECTOR_DMA1_CH1,
        INT_VECTOR_DMA1_CH2,
        INT_VECTOR_DMA1_CH3,
        INT_VECTOR_DMA1_CH4,
        INT_VECTOR_DMA1_CH5,
        INT_VECTOR_DMA1_CH6,
        INT_VECTOR_DMA1_CH7,
        INT_VECTOR_ADC1_2,
        INT_VECTOR_USB_HP_CAN_TX,
        INT_VECTOR_USB_LP_CAN_RX0,
        INT_VECTOR_CAN_RX1,
        INT_VECTOR_CAN_SCE,
        INT_VECTOR_EXTI9_5,
        INT_VECTOR_TIM1_BRK_TIM9,
        INT_VECTOR_TIM1_UP_TIM10,
        INT_VECTOR_TIM1_TRG_COM_TIM11,
        INT_VECTOR_TIM1_CC,
        INT_VECTOR_TIM2,
        INT_VECTOR_TIM3,
        INT_VECTOR_TIM4,
        INT_VECTOR_I2C1_EV,
        INT_VECTOR_I2C1_ER,
        INT_VECTOR_I2C2_EV,
        INT_VECTOR_I2C2_ER,
        INT_VECTOR_SPI1,
        INT_VECTOR_SPI2,
        INT_VECTOR_USART1,
        INT_VECTOR_USART2,
        INT_VECTOR_USART3,
        INT_VECTOR_EXTI15_10,
        INT_VECTOR_RTC_ALARM,
        INT_VECTOR_USB_WAKEUP,
        INT_VECTOR_TIM8_BRK_TIM12,
        INT_VECTOR_TIM8_UP_TIM13,
        INT_VECTOR_TIM8_TRG_COM_TIM14,
        INT_VECTOR_TIM8_CC,
        INT_VECTOR_ADC3,
        INT_VECTOR_FSMC,
        INT_VECTOR_SDIO,
        INT_VECTOR_TIM5,
        INT_VECTOR_SPI3,
        INT_VECTOR_UART4,
        INT_VECTOR_UART5,
        INT_VECTOR_TIM6,
        INT_VECTOR_TIM7,
        INT_VECTOR_DMA2_CH1,
        INT_VECTOR_DMA2_CH2,
        INT_VECTOR_DMA2_CH3,
        INT_VECTOR_DMA2_CH4_5,
    };
};

template <> class moduleIntCtrl<STM32F103RB>
{
public:
    typedef mcuIntModel<STM32F103RB, NULL_FUNCTION_PTR, startupCallintCtrl;
private:
    __attribute__((section(".vectors"))) static volatile fptr interruptTable[78];
};
typedef moduleIntCtrl<STM32F103RB> iCtl;
__attribute__((section(".vectors"))) static volatile fptr interruptTable[78] =
{
    reinterpret_cast<fptr>(0x20002000u),
    startupCall,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_NMI>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_HARD_FAULT>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_MEM_MANAGE>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_BUS_FAULT>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_USG_FAULT>,
    RESERVED_INTERRUPT_VECTOR,
    RESERVED_INTERRUPT_VECTOR,
    RESERVED_INTERRUPT_VECTOR,
    RESERVED_INTERRUPT_VECTOR,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_SVC_CALL>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DEBUG_MONITOR>,
    RESERVED_INTERRUPT_VECTOR,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_PEND_SV>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_SYSTICK_TIMER>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_WWDG>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_PVD>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TAMPER>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_RTC>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_FLASH>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_RCC>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_EXTI0>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_EXTI1>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_EXTI2>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_EXTI3>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_EXTI4>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA1_CH1>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA1_CH2>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA1_CH3>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA1_CH4>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA1_CH5>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA1_CH6>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA1_CH7>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_ADC1_2>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_USB_HP_CAN_TX>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_USB_LP_CAN_RX0>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_CAN_RX1>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_CAN_SCE>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_EXTI9_5>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM1_BRK_TIM9>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM1_UP_TIM10>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM1_TRG_COM_TIM11>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM1_CC>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM2>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM3>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM4>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_I2C1_EV>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_I2C1_ER>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_I2C2_EV>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_I2C2_ER>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_SPI1>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_SPI2>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_USART1>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_USART2>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_USART3>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_EXTI15_10>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_RTC_ALARM>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_USB_WAKEUP>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM8_BRK_TIM12>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM8_UP_TIM13>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM8_TRG_COM_TIM14>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM8_CC>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_ADC3>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_FSMC>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_SDIO>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM5>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_SPI3>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_UART4>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_UART5>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM6>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_TIM7>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA2_CH1>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA2_CH2>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA2_CH3>,
    iCtl::intCtrl::interruptVector<iCtl::intCtrl::INT_VECTOR_DMA2_CH4_5>,
};
#endif
